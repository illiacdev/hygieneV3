resolver 127.0.0.11;

server {

 #return 301 https://$host$request_uri;

    listen       80;
    listen  [::]:80;
    #server_name  ninesoft.kr;
    # server_name  haslabs.shop;

    #charset koi8-r;
    #access_log  /var/log/nginx/host.access.log  main;


location / {
#set $front "http://front_end";
#proxy_pass $front;
proxy_pass "http://front_end:80";
        #root   /usr/share/nginx/html;
        #root   /app;
        #index  index.html index.htm;
    }



#location /graphql/ {
location /graphql {
#rewrite ^/back1(/.*)$ $1 break; # url에서 other 뒤에 있는 URL을 전부 그대로 사용.
#set $back1 "http://back_end:8080/";

 proxy_pass        http://back_end:8080/graphql;
 server_tokens off;
            #proxy_redirect     off;
            proxy_set_header   Host $host;

            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;



        #proxy_pass $back1;
        #proxy_set_header X-Real-IP $remote_addr; # 실제 접속자의 IP를 X-Real-IP 헤더에 입혀서 전송.
       # proxy_redirect off;

#proxy_set_header Host $host;
#proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

}

location /api {
#rewrite ^/back1(/.*)$ $1 break; # url에서 other 뒤에 있는 URL을 전부 그대로 사용.
#set $back1 "http://back_end:8080/";

 proxy_pass        http://back_end:8080/api;
 server_tokens off;
            #proxy_redirect     off;
            proxy_set_header   Host $host;

            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;



        #proxy_pass $back1;
        #proxy_set_header X-Real-IP $remote_addr; # 실제 접속자의 IP를 X-Real-IP 헤더에 입혀서 전송.
       # proxy_redirect off;

#proxy_set_header Host $host;
#proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

}




    #error_page  404              /404.html;


    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}

